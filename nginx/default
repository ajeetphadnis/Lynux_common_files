    server {
	# support http and ipv6
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;

        # support https and ipv6
        listen 443 default_server ssl;
        listen [::]:443 ipv6only=on default_server ssl;
        server_name phadnis.no;
        return 301 https://phadnis.no$request_uri;
    #}

    # if ($scheme = http) {
    #    return 301 https://$server_name$request_uri;
    # }
    ssl off;
    # listen [::]:443 ssl http2 ipv6only=on; 
    # listen 443 ssl http2;
    # listen 443 default ssl;
    # listen [::]:443 ssl;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    root /var/www/utes_nginx/html;
    index index.html index.htm index.nginx-debian.html;
  
    add_header 'Access-Control-Allow-Origin' '*' 'always';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type';
    gzip_types text/plain text/css application/json application/x-javascript
    text/xml application/xml application/xml+rss text/javascript;
  
    # server_name phadnis.no;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /convert {
	proxy_pass https://phadnis.no:30010/demo_user;
	proxy_set_header Host $host;
	proxy_set_header client-ip $remote_addr;
        proxy_set_header   X-Forwarded-Host $http_host;
       proxy_set_header   X-Forwarded-Proto "https";
       proxy_set_header   X-Real-IP $remote_addr;
       proxy_set_header   X-Forwarded-Port $server_port;
       proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_http_version 1.1;  
   }
   location /clients {
	proxy_pass https://phadnis.no:30005/client_start;
        proxy_set_header Host $host;    
        proxy_set_header client-ip $remote_addr;
        proxy_set_header   X-Forwarded-Host $http_host;
       proxy_set_header   X-Forwarded-Proto $scheme;
       proxy_set_header   X-Real-IP $remote_addr;
       proxy_set_header   X-Forwarded-Port $server_port;
       proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_http_version 1.1;
   }
   location /mldl {
	proxy_pass http://ajeet-dev:30015/mldl;
        proxy_set_header Host $host;    
        proxy_set_header client-ip $remote_addr;
        proxy_set_header   X-Forwarded-Host $http_host;
       proxy_set_header   X-Forwarded-Proto $scheme;
       proxy_set_header   X-Real-IP $remote_addr;
       proxy_set_header   X-Forwarded-Port $server_port;
       proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_http_version 1.1;
   }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

proxy_redirect http://phadnis.no:443/ https://phadnis.no/;

# server {
#     listen 80;
#     listen [::]:80;
#     # error_page 497 https://$host:$server_port$request_uri;
#     server_name phadnis.no;
# 
#     return 301 https://$server_name$request_uri;
# }

